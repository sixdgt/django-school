# Generated by Django 5.2.3 on 2025-06-16 14:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='School Full Name')),
                ('school_type', models.CharField(choices=[('PUBLIC', 'A Public School'), ('PRIVATE', 'A Private School')], default='PUBLIC', max_length=10, verbose_name='School Type')),
                ('address', models.CharField(max_length=100, verbose_name='School Address')),
                ('city', models.CharField(max_length=100, verbose_name='School City')),
                ('state', models.CharField(max_length=100, verbose_name='School State')),
                ('zip_code', models.CharField(max_length=10, verbose_name='School Zip Code')),
                ('phone', models.CharField(max_length=10, verbose_name='School Phone')),
                ('website', models.URLField(max_length=100, verbose_name='School Website')),
                ('principal', models.CharField(max_length=100, verbose_name='School Principal Name')),
            ],
            options={
                'verbose_name': 'school',
                'verbose_name_plural': 'school',
                'ordering': ['-full_name'],
                'indexes': [models.Index(fields=['full_name'], name='modelpracti_full_na_e8fe0b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_code', models.CharField(editable=False, max_length=10, unique=True)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')], verbose_name='Phone')),
                ('address', models.CharField(max_length=100, verbose_name='Address')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State')),
                ('zip_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Zip code must be exactly 5 digits.', regex='^\\d{5}$')], verbose_name='Zip Code')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], default='MALE', max_length=10, verbose_name='Gender')),
                ('parent_name', models.CharField(max_length=100, verbose_name='Parent Name')),
                ('parent_phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must be exactly 10 digits.', regex='^\\d{10}$')], verbose_name='Parent Phone')),
                ('parent_email', models.EmailField(max_length=100, validators=[django.core.validators.EmailValidator()], verbose_name='Parent Email')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='qr_codes')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', related_query_name='person', to='modelpractice.school')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
                'ordering': ['-first_name'],
                'indexes': [models.Index(fields=['first_name', 'last_name'], name='modelpracti_first_n_952586_idx'), models.Index(fields=['registration_code'], name='modelpracti_registr_ba855f_idx'), models.Index(fields=['date_of_birth'], name='modelpracti_date_of_065778_idx')],
            },
        ),
    ]
